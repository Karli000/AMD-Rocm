#!/bin/bash
LOG="rocm_setup.log"
echo "üöÄ ROCm Setup gestartet: $(date)" > "$LOG"

# 1Ô∏è‚É£ GPU-Erkennung
GPU=$(lspci | grep VGA | grep -i AMD)
if [[ -z "$GPU" ]]; then
  echo "‚ùå Keine AMD-GPU erkannt. Abbruch." | tee -a "$LOG"; exit 1
else
  echo "‚úÖ GPU erkannt: $GPU" | tee -a "$LOG"
fi

# 2Ô∏è‚É£ Kernel-Version pr√ºfen (>=5.13 & <=6.14)
KERNEL=$(uname -r | cut -d '-' -f1)
MAJOR=$(echo "$KERNEL" | cut -d '.' -f1)
MINOR=$(echo "$KERNEL" | cut -d '.' -f2)
CURRENT=$(echo "$MAJOR.$MINOR")
if awk "BEGIN{exit !($CURRENT >= 5.13 && $CURRENT <= 6.14)}"; then
  echo "‚úÖ Kernel-Version ($CURRENT) ist kompatibel mit ROCm" | tee -a "$LOG"
else
  echo "‚ùå Inkompatibler Kernel ($CURRENT). Abbruch." | tee -a "$LOG"; exit 1
fi

# 3Ô∏è‚É£ DKMS pr√ºfen
if ! dpkg -s dkms &> /dev/null; then
  echo "üì¶ Installiere DKMS..." | tee -a "$LOG"
  sudo apt install -y dkms
else
  echo "‚úÖ DKMS ist installiert" | tee -a "$LOG"
fi

# 4Ô∏è‚É£ Alte Treiber bereinigen
sudo apt purge -y rocm-dkms amdgpu-pro amdgpu
sudo rm -f /etc/apt/sources.list.d/rocm.list
sudo apt autoremove -y | tee -a "$LOG"

# 5Ô∏è‚É£ ROCm Repo hinzuf√ºgen
echo "deb [arch=amd64] https://repo.radeon.com/rocm/apt/5.7/ ubuntu main" | sudo tee /etc/apt/sources.list.d/rocm.list
wget -qO - https://repo.radeon.com/rocm/rocm.gpg.key | sudo apt-key add -
sudo apt update

# 6Ô∏è‚É£ ROCm Pakete installieren
sudo apt install -y rocm-dev hipcc clinfo rocminfo

# 7Ô∏è‚É£ Module laden
sudo modprobe amdgpu

# 8Ô∏è‚É£ Variablen setzen + dauerhaft speichern
export ROCM_PATH=/opt/rocm
export PATH=$ROCM_PATH/bin:$PATH
export LD_LIBRARY_PATH=$ROCM_PATH/lib:$ROCM_PATH/lib64:$LD_LIBRARY_PATH
export DEVICE_LIB_PATH=$ROCM_PATH/lib/amdgcn/bitcode
export HSA_OVERRIDE_GFX_VERSION=10.3.0
if ! grep -q "ROCm Setup" ~/.bashrc; then
  echo -e "\n# ROCm Setup" >> ~/.bashrc
  echo "export ROCM_PATH=/opt/rocm" >> ~/.bashrc
  echo "export PATH=\$ROCM_PATH/bin:\$PATH" >> ~/.bashrc
  echo "export LD_LIBRARY_PATH=\$ROCM_PATH/lib:\$ROCM_PATH/lib64:\$LD_LIBRARY_PATH" >> ~/.bashrc
  echo "export DEVICE_LIB_PATH=\$ROCM_PATH/lib/amdgcn/bitcode" >> ~/.bashrc
  echo "export HSA_OVERRIDE_GFX_VERSION=10.3.0" >> ~/.bashrc
fi

# üîÑ Variablen jetzt sofort aktivieren
source ~/.bashrc
echo "‚úÖ Umgebungsvariablen geladen!" | tee -a "$LOG"

# 9Ô∏è‚É£ OpenCL-Test
if command -v clinfo &> /dev/null; then
  clinfo | tee -a "$LOG"
else
  echo "‚ö†Ô∏è clinfo fehlt oder nicht ausf√ºhrbar" | tee -a "$LOG"
fi

# üîü HIP-Test ‚Äì Vektoraddition
mkdir -p ~/hip_test && cd ~/hip_test
cat << 'EOF' > vector_add.cpp
#include <hip/hip_runtime.h>
#include <iostream>
#define N 100
__global__ void vector_add(const int* A, const int* B, int* C) {
  int i = threadIdx.x;
  C[i] = A[i] + B[i];
}
int main() {
  int A[N], B[N], C[N];
  for (int i = 0; i < N; i++) { A[i] = i; B[i] = i * 2; }
  int *d_A, *d_B, *d_C;
  hipMalloc(&d_A, N * sizeof(int)); hipMalloc(&d_B, N * sizeof(int)); hipMalloc(&d_C, N * sizeof(int));
  hipMemcpy(d_A, A, N * sizeof(int), hipMemcpyHostToDevice);
  hipMemcpy(d_B, B, N * sizeof(int), hipMemcpyHostToDevice);
  hipLaunchKernelGGL(vector_add, dim3(1), dim3(N), 0, 0, d_A, d_B, d_C);
  hipMemcpy(C, d_C, N * sizeof(int), hipMemcpyDeviceToHost);
  for (int i = 0; i < 5; i++) std::cout << A[i] << " + " << B[i] << " = " << C[i] << std::endl;
  hipFree(d_A); hipFree(d_B); hipFree(d_C);
  return 0;
}
EOF
if command -v hipcc &> /dev/null; then
  hipcc vector_add.cpp -o vector_add_test
  ./vector_add_test | tee -a "$LOG"
else
  echo "‚ö†Ô∏è hipcc fehlt oder nicht ausf√ºhrbar ‚Äì HIP-Test √ºbersprungen" | tee -a "$LOG"
fi
cd ~ && rm -rf ~/hip_test

# üìä Zusammenfassung
echo -e "\nüìä ROCm Installations√ºbersicht:" | tee -a "$LOG"
echo "| Schritt | Beschreibung                    | Status              |" | tee -a "$LOG"
echo "|---------|---------------------------------|---------------------|" | tee -a "$LOG"
echo "| 1Ô∏è‚É£     | GPU erkannt                      | ‚úÖ $GPU              |" | tee -a "$LOG"
echo "| 2Ô∏è‚É£     | Kernel-Version gepr√ºft          | ‚úÖ $CURRENT          |" | tee -a "$LOG"
echo "| 3Ô∏è‚É£     | DKMS gepr√ºft                    | ‚úÖ OK                |" | tee -a "$LOG"
echo "| 4Ô∏è‚É£     | Alte Treiber entfernt           | ‚úÖ Bereinigt         |" | tee -a "$LOG"
echo "| 5Ô∏è‚É£     | ROCm-Komponenten installiert    | ‚úÖ rocm-dev, hipcc   |" | tee -a "$LOG"
echo "| 6Ô∏è‚É£     | Module geladen                  | ‚úÖ amdgpu geladen    |" | tee -a "$LOG"
echo "| 7Ô∏è‚É£     | Umgebungsvariablen gesetzt      | ‚úÖ aktiviert         |" | tee -a "$LOG"
echo "| 8Ô∏è‚É£     | OpenCL-Test (clinfo)            | ‚ö†Ô∏è siehe Ausgabe     |" | tee -a "$LOG"
echo "| 9Ô∏è‚É£     | HIP-Test (Vektoraddition)       | ‚ö†Ô∏è siehe Ausgabe     |" | tee -a "$LOG"
