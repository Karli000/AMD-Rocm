#!/bin/bash
LOG="KI_test.log"
echo "🧪 ROCm Komponententest mit venv gestartet: $(date)" > "$LOG"

# 📦 Python-Version ermitteln (z. B. 3.12)
PY_VER=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
VENV_PKG="python${PY_VER}-venv"
FULL_PKG="python${PY_VER}-full"

# 🔍 Test: ensurepip vorhanden?
if ! python3 -m ensurepip &>/dev/null; then
  echo -e "\n⚙️ Python venv/ensurepip fehlen – installiere:"
  echo "🔧 sudo apt update"
  echo "🔧 sudo apt install -y $VENV_PKG $FULL_PKG"
  sudo apt update
  sudo apt install -y "$VENV_PKG" "$FULL_PKG"
fi

# 🧠 venv einrichten + Pakete installieren
python3 -m venv ~/rocm_venv
source ~/rocm_venv/bin/activate
pip install --upgrade pip notebook tensorflow matplotlib pandas

# 🚀 HIP Test
echo -e "\n🚀 HIP Test..." | tee -a "$LOG"
hipcc --version &>/dev/null && HIP_STATUS="✅ verfügbar" || HIP_STATUS="❌ fehlt"

# 📘 Jupyter Test
echo -e "\n📘 Jupyter Test..." | tee -a "$LOG"
~/rocm_venv/bin/jupyter --version &>/dev/null && JUPYTER_STATUS="✅ verfügbar" || JUPYTER_STATUS="❌ fehlt"

# 🎨 Blender Test
echo -e "\n🎨 Blender Test..." | tee -a "$LOG"
blender --version &>/dev/null && BLENDER_STATUS="✅ verfügbar" || BLENDER_STATUS="❌ fehlt"

# 🧠 TensorFlow Test
echo -e "\n🧠 TensorFlow Test..." | tee -a "$LOG"
~/rocm_venv/bin/python -c "import tensorflow" &>/dev/null && TENSORFLOW_STATUS="✅ verfügbar" || TENSORFLOW_STATUS="❌ fehlt"

# 📊 Komponententabelle
echo -e "\n📊 Komponententabelle:" | tee -a "$LOG"
TABLE=$(cat <<TAB
| Komponente   | Funktionstest         | Status             |
|--------------|-----------------------|--------------------|
| HIP          | hipcc --version       | ${HIP_STATUS}      |
| Jupyter      | CLI-Versionstest      | ${JUPYTER_STATUS}  |
| Blender      | blender --version     | ${BLENDER_STATUS}  |
| TensorFlow   | Import im venv        | ${TENSORFLOW_STATUS}|
TAB
)

echo -e "\n🧾 Zusammenfassung:\n$TABLE" | tee -a "$LOG"
echo -e "\n✅ Test abgeschlossen! Ergebnisse gespeichert in $LOG"
